buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven {
            url "https://nexus.dev.sda-se.com/repository/sda-se-releases/"
            credentials {
                username sdaNexusUser
                password sdaNexusPassword
            }
        }
    }
    dependencies {
        classpath group: 'com.sdase.gradle', name: 'eclipse-settings' , version: '0.+'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '3.3.2'
    id 'nebula.integtest' version '3.4.0'
    id 'pl.allegro.tech.build.axion-release' version '1.9.3'
}

subprojects {
    group 'com.sdase.commons'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'
    apply plugin: 'nebula.integtest'
    apply plugin: 'org.owasp.dependencycheck'
    apply plugin: 'com.sdase.gradle.eclipse-settings'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url "http://packages.confluent.io/maven/" }
        maven {
            url "https://nexus.dev.sda-se.com/repository/sda-se-releases/"
            credentials {
                username sdaNexusUser
                password sdaNexusPassword
            }
        }
    }

    project.ext {

        dropwizardVersion         = '1.3.5'
        guavaVersion              = '24.0-jre'
        findbugsVersion           = '3.0.2'
        jodaTimeVersion           = '2.9.9'
        javaassistVersion         = '3.22.0-GA'
        hibernateValidatorVersion = '5.4.2.Final'
        openApiToolVersion        = '1.0.4'
        swaggerVersion            = '1.5.21'
        slf4jVersion              = '1.7.25'
        weldVersion               = '3.0.4.Final'
        jerseyVersion             = '2.25.1'
        jbossLoggingVersion       = '3.3.0.Final'
        auth0Version              = '3.3.0'
        commonsCodecVersion       = '1.11'
        apacheHttpClientVersion   = '4.5.5'

        junit4Version              = '4.12'
        mockitoVersion             = '2.23.0'
        assertjVersion             = '3.11.1'
        googleTruthVersion         = '0.42'
        jsonSchemaValidatorVersion = '2.2.10'
        h2Version                  = '1.4.197'
        databaseRiderVersion       = '1.2.9' // latest version that supports Parameterized tests: https://github.com/database-rider/database-rider/issues/104
        dbUnitVersion              = '2.5.4'

        kafkaClientsVersion        = '1.1.1'
        kafkaAvroVersion           = '3.2.1'
        kafkaTopicanaCoreVersion   = '0.1.0'
        kafkaJunitVersion          = '3.0.1' // testing module dependency
        kafkaVersion               = '1.1.1' // dependency for testing
    }

    configurations.all {
        resolutionStrategy {
            // Fail on version conflict (includes transitive dependencies)
            // Manage the dependencies by excludes and explicit dependencies in each module to have convergent versions.
            // Using 'force' in this resolutionStrategy can't be used because it is only applied to a specific module
            // but not to the modules and applications that use the module as dependency.
            failOnVersionConflict()
        }
    }

    sourceSets {
        main {
            output.resourcesDir = output.classesDirs.singleFile
        }
        test {
            output.resourcesDir = output.classesDirs.singleFile
        }
        integTest {
            output.resourcesDir = output.classesDirs.singleFile
        }
    }

    // release
    scmVersion {
        versionIncrementer 'incrementPrerelease'
        checks {
            uncommittedChanges = false
            aheadOfRemote = false
        }
        tag { prefix = '' }
    }
    version = scmVersion.version

    task('sourcesJar', type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    artifacts {
        archives jar
        archives sourcesJar
    }
    jar {
        version = null
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "https://nexus.dev.sda-se.com/repository/sda-se-releases/") {
                    authentication(userName: sdaNexusUser, password: sdaNexusPassword)
                }
            }
        }
    }
}


