# This workflow builds, tests, and releases the modules.
name: Java CI

on:
  push:
    branches:
      - master
      - release/1.x.x
  pull_request:

jobs:
  # build library
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # always run all tests to avoid having different amounts of tests.
      fail-fast: false
      matrix:
        java_version: ['8', '11']
        os: ['ubuntu-latest', 'windows-latest']
        exclude:
          # We have a lot of failures with exactly the Windows with Java 11 combination
          - os: windows-latest
            java_version: '11'

    timeout-minutes: 60
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          fetch-depth: 0 # fetch commit log so that Sonar is able to assign committers to issues

      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d # tag=v3.5.1
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java_version }}
          cache: 'gradle'

      - name: Test with Gradle
        uses: nick-invision/retry@7f8f3d9f0f62fe5925341be21c2e8314fd4f7c7c # tag=v2
        with:
          timeout_minutes: 30
          max_attempts: 5
          retry_wait_seconds: 10
          warning_on_retry: false
          command: ./gradlew --parallel --continue check -x spotlessCheck

      - name: Generate Test Report
        if: always()
        run: ./gradlew -x test testReport codeCoverageReport

      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        if: always()
        with:
          name: ${{ matrix.os }}-${{ matrix.java_version }}-test-results
          path: |
            build/reports/
            */build/test-results/**/*.xml
          retention-days: 7

  publish-test-results:
    name: "Publish Unit Tests Results"
    timeout-minutes: 60
    needs: build
    runs-on: ubuntu-latest
    # Don't run for forks and dependabot because of missing secrets
    if: (success() || failure()) && !(github.event.pull_request && github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@b9f6c61d965bcaa18acc02d6daf706373a448f02 # tag=v1.40
        with:
          junit_files: artifacts/**/build/test-results/**/*.xml

  # create release and publish the artifacts
  semantic-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Setup Node.js
        uses: actions/setup-node@969bd2663942d722d85b6a8626225850c2f7be4b # tag=v3
        with:
          node-version: 14

      - name: Set up JDK 1.8
        uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d # tag=v3.5.1
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'gradle'

      - name: Install Semantic release
        run: |
          sudo npm install -g \
            semantic-release@18.0.0 \
            @semantic-release/git@10.0.0 \
            @semantic-release/release-notes-generator@10.0.2 \
            @semantic-release/github@8.0.0

      - name: Release and Publish
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.NEXUS_LOGIN_TOKEN }}
