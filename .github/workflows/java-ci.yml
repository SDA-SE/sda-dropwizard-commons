# This workflow builds, tests, and releases the modules.
name: Java CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # build library
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # always run all tests to avoid having different amounts of tests.
      fail-fast: false
      matrix:
        java_version: ['17', '21']
        os: ['ubuntu-latest', 'windows-latest']

    timeout-minutes: 60
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
        with:
          fetch-depth: 0 # fetch commit log so that Sonar is able to assign committers to issues

      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java_version }}
          cache: 'gradle'

      - name: Test with Gradle
        uses: nick-invision/retry@7152eba30c6575329ac0576536151aca5a72780e # v2
        with:
          timeout_minutes: 30
          max_attempts: 5
          retry_wait_seconds: 10
          warning_on_retry: false
          command: ./gradlew --parallel --continue check -x spotlessCheck

      - name: Generate Test Report
        if: always()
        run: ./gradlew -x test testReport codeCoverageReport

      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: always()
        with:
          name: ${{ matrix.os }}-${{ matrix.java_version }}-test-results
          path: |
            build/reports/
            */build/test-results/**/*.xml
            */build/classes/
          retention-days: 7

  publish-test-results:
    name: "Publish Unit Tests Results"
    timeout-minutes: 60
    needs: build
    runs-on: ubuntu-latest
    # Don't run for forks and dependabot because of missing secrets
    if: (success() || failure()) && !(github.event.pull_request && github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v3
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@30eadd5010312f995f0d3b3cff7fe2984f69409e # v2.16.1
        with:
          junit_files: artifacts/**/build/test-results/**/*.xml

  # create release and publish the artifacts
  semantic-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v3
        with:
          node-version: 14

      - name: Set up JDK 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Install Semantic release
        run: |
          sudo npm install -g \
            semantic-release@18.0.0 \
            @semantic-release/git@10.0.0 \
            @semantic-release/release-notes-generator@10.0.2 \
            @semantic-release/github@8.0.0

      - name: Release and Publish
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.NEXUS_LOGIN_TOKEN }}
