# This workflow builds, tests, and releases the modules.
name: Java CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # build library
  build:
    name: build (${{matrix.java_version}}, ${{ startsWith(matrix.os, 'windows-') && 'windows-latest' || 'ubuntu-latest' }})
    runs-on: ${{ matrix.os }}

    strategy:
      # always run all tests to avoid having different amounts of tests.
      fail-fast: false
      matrix:
        java_version: ['17', '21']
        os: ['ubuntu-22.04', 'windows-2022']

    timeout-minutes: 60
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0 # fetch commit log so that Sonar is able to assign committers to issues

      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java_version }}
          cache: 'gradle'

      - name: Test with Gradle
        uses: nick-invision/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v2
        with:
          timeout_minutes: 30
          max_attempts: 5
          retry_wait_seconds: 10
          warning_on_retry: false
          command: ./gradlew --parallel --continue check -x spotlessCheck

      - name: Generate Test Report
        if: always()
        run: ./gradlew -x test testReport codeCoverageReport

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          # keep latest suffix for subsequent workflows
          name: ${{ startsWith(matrix.os, 'windows-') && 'windows-latest' || 'ubuntu-latest' }}-${{ matrix.java_version }}-test-results
          path: |
            build/reports/
            */build/test-results/**/*.xml
            */build/classes/
          retention-days: 7

  publish-test-results:
    name: "Publish Unit Tests Results"
    timeout-minutes: 60
    needs: build
    runs-on: ubuntu-latest
    # Don't run for forks and dependabot because of missing secrets
    if: (success() || failure()) && !(github.event.pull_request && github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v3
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b # v2.18.0
        with:
          junit_files: artifacts/**/build/test-results/**/*.xml

  # create release and publish the artifacts
  semantic-release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v3
        with:
          node-version: 14

      - name: Set up JDK 17
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Install Semantic release
        run: |
          sudo npm install -g \
            semantic-release@18.0.0 \
            @semantic-release/git@10.0.0 \
            @semantic-release/release-notes-generator@10.0.2 \
            @semantic-release/github@8.0.0

      - name: Release and Publish
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.NEXUS_LOGIN_TOKEN }}
