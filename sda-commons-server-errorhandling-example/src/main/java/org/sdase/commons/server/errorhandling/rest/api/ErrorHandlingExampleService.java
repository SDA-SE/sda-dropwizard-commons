package org.sdase.commons.server.errorhandling.rest.api;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.sdase.commons.server.errorhandling.rest.model.RequestObject;
import org.sdase.commons.server.errorhandling.rest.model.ResponseObject;

@Path("errors")
public interface ErrorHandlingExampleService {

  /**
   * Example for throwing a subclass of {@link javax.ws.rs.WebApplicationException} These comprise
   * exceptions for nearly all used http error status codes
   *
   * @return nothing, just throws exception
   */
  @GET
  @Path("notFound")
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  ResponseObject notFoundException();

  /**
   * Example for creating a response object that contains an {@link
   * org.sdase.commons.shared.api.error.ApiError} as entity so that the rest guide compliant error
   * structure is returned
   *
   * @return a response object with compliant error structure
   */
  @GET
  @Path("errorResponse")
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  Response errorResponse();

  /**
   * Example for or creating an {@link org.sdase.commons.shared.api.error.ApiException} to throw
   * exceptions with http status codes that are not covered by {@link
   * javax.ws.rs.WebApplicationException}s
   *
   * @return nothing, just the exception is thrown
   */
  @GET
  @Path("apiException")
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  Response apiException();

  /**
   * Example for validation exceptions generated by build-in and custom validations
   *
   * @param resource should contain invalid data to force the exception
   * @return ok, if valid. {@link javax.validation.ValidationException} if the input param is empty
   *     or not uppercase
   */
  @POST
  @Path("validation")
  @Consumes(MediaType.APPLICATION_JSON)
  @Produces(MediaType.APPLICATION_JSON)
  Response validation(@Valid RequestObject resource);
}
